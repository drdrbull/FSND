{
	"info": {
		"_postman_id": "2dc92eb5-f4e4-4f05-85a7-695e2260f1dc",
		"name": "Capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32568979"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "getActors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fsnd-ibw4.onrender.com/actors",
							"protocol": "https",
							"host": [
								"fsnd-ibw4",
								"onrender",
								"com"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMovies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains films array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.films).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fsnd-ibw4.onrender.com/movies",
							"protocol": "https",
							"host": [
								"fsnd-ibw4",
								"onrender",
								"com"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "addFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "addActor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://fsnd-ibw4.onrender.com/movies",
							"protocol": "https",
							"host": [
								"fsnd-ibw4",
								"onrender",
								"com"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteActor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRjV0E3ZzdfcGY0V3lITzMtdG12WCJ9.eyJpc3MiOiJodHRwczovL2Rldi0zdGp4b2FpeTM2cXNxamlhLnVrLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NWNjYTZlNDkzMDJhZjEyZTJlMzA2NDAiLCJhdWQiOiJjYXBzdG9uZSIsImlhdCI6MTcxNDEzNzg1OCwiZXhwIjoxNzE0MTQ1MDU4LCJzY29wZSI6IiIsImF6cCI6ImFOQ3R5N0hpQnVFc2RvZ3hTTnB5UnY4dzJhWG96Z1hzIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.BhzOaL01BcDTCn703GAq88WbEZUj5y5UaAIkBWhS1R2rJLX2SIjhlt4HUPYxE_B1Pc2L8AwrNaV5wms8DtHnufWScyh8_hQIn6LTeu9JVgB1xU4bssSImVGnBNsETeqGT668DQ3KX8mbqZL4amjtYuL4NZbWocg7o5yNbXTrgOp_T_yxKH08jVvDckKDpLQHa0c3qcRacH3W_99MrIwwkuHnWLx2sBA3Dk0a2gs9wA3N_BgpChUW7NrF4EUluVxRoun1KkhOuFq2DM4w873-NqHaSWecHZoNXOgLYXraZvdyiWyswTUIMMBfZyNl078e0wS_ZpAH2flncbR5-A-hDQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "getActors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMovies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors films\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.films).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "addActor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Margot Robbie\",\n    \"age\" : \"21\",\n    \"gender\" : \"F\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchActor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actor_id\" : 2,\n    \"name\" : \"Margot Robbie\",\n    \"age\" : \"22\",\n    \"gender\" : \"F\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchRequest404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actor_id\" : 99,\n    \"name\" : \"Margot Robbie\",\n    \"age\" : \"22\",\n    \"gender\" : \"F\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteActor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchMovie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors films\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.films).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"film_id\" : 1,\n\"new_title\" : \"Barbenheimer\",\n\"new_release_date\" : \"2023-09-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRjV0E3ZzdfcGY0V3lITzMtdG12WCJ9.eyJpc3MiOiJodHRwczovL2Rldi0zdGp4b2FpeTM2cXNxamlhLnVrLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NWNjYTZlNDkzMDJhZjEyZTJlMzA2NDAiLCJhdWQiOiJjYXBzdG9uZSIsImlhdCI6MTcxNDEzODAxMiwiZXhwIjoxNzE0MTQ1MjEyLCJzY29wZSI6IiIsImF6cCI6ImFOQ3R5N0hpQnVFc2RvZ3hTTnB5UnY4dzJhWG96Z1hzIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.FFEx3I6bLDbLk09W9_SSbx5FsYBQMnRmg0rGM13j0tqy3PfSOStgfgBy1pxixhMeEZcTAuV2cCdXDnaq28NSaORAbEnA_K-ksS45DYMYIrXs9PFX_lMDysp6WogW6W9nEdGFySbScqFF95us5x6R8XkPMGtzqvKHUQsyPgn2Mf3oroXf2i6tgUMdk-rcacKShhBhMbdCcyXMbzjYgJTD1vYOv1xJ0uhOvmpC9MUD6-zmBal1NbOzdn3t6n6OdR8-lx-vm_2wN09IgMy8JV1dajjW5hKQXZfBhWetkXDLmuH7aDbVtfeyCmR1p2MmpzbKf1LDnfQIEaZDjFZbRzKK-g",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "addFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors films\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.films).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\" : \"Barbie\",\n    \"release_date\" : \"2024-03-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRjV0E3ZzdfcGY0V3lITzMtdG12WCJ9.eyJpc3MiOiJodHRwczovL2Rldi0zdGp4b2FpeTM2cXNxamlhLnVrLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NWNjYTZlNDkzMDJhZjEyZTJlMzA2NDAiLCJhdWQiOiJjYXBzdG9uZSIsImlhdCI6MTcxNDEzODEzMCwiZXhwIjoxNzE0MTQ1MzMwLCJzY29wZSI6IiIsImF6cCI6ImFOQ3R5N0hpQnVFc2RvZ3hTTnB5UnY4dzJhWG96Z1hzIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIiwicG9zdDptb3ZpZXMiXX0.N-wfxZedYjh1JwVUeWHACq1O0WDAM5qrC2scpdeHUmGAjG-W4VPZdJh5tL9rU0ai4pkohEfNdR8mFJfbauCrqgQbUxpxvYsQyGyGrlqQU6VPv4Z6LzqO85Cg_OAhAR2X477VX2bsbn_lzbuIdHw6qinkW7o2h8yzEdvaPqvyWcl6DmuEqPNrOY7GNUXWqqKNIZSb9WUsyWLuDt85hmShlrORbnxnL1UfUioLue-mUWxaIxgb-uEa37fx1BOLVaBIA0Uc4DRS4qbR-B_JsejiI6nZbwO-UNmbcFPSOeuez1sRNsAdjdf_OutmCI_TEifUs0O7iussAA2cxSfX5oV8EQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000"
		}
	]
}